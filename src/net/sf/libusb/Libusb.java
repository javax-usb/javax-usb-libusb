/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

public class Libusb implements LibusbConstants {
  public static SWIGTYPE_p_usb_dev_handle usb_open(usb_device dev) {
    long cPtr = LibusbJNI.usb_open(usb_device.getCPtr(dev));
    return (cPtr == 0) ? null : new SWIGTYPE_p_usb_dev_handle(cPtr, false);
  }

  public static int usb_close(SWIGTYPE_p_usb_dev_handle dev) {
    return LibusbJNI.usb_close(SWIGTYPE_p_usb_dev_handle.getCPtr(dev));
  }

  public static int usb_get_string(SWIGTYPE_p_usb_dev_handle dev, int index, int langid, byte[] buf) {
    return LibusbJNI.usb_get_string(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), index, langid, buf);
  }

  public static int usb_get_string_simple(SWIGTYPE_p_usb_dev_handle dev, int index, byte[] buf) {
    return LibusbJNI.usb_get_string_simple(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), index, buf);
  }

  public static int usb_get_descriptor_by_endpoint(SWIGTYPE_p_usb_dev_handle udev, int ep, short type, short index, byte[] buf) {
    return LibusbJNI.usb_get_descriptor_by_endpoint(SWIGTYPE_p_usb_dev_handle.getCPtr(udev), ep, type, index, buf);
  }

  public static int usb_get_descriptor(SWIGTYPE_p_usb_dev_handle udev, short type, short index, byte[] buf) {
    return LibusbJNI.usb_get_descriptor(SWIGTYPE_p_usb_dev_handle.getCPtr(udev), type, index, buf);
  }

  public static int usb_bulk_write(SWIGTYPE_p_usb_dev_handle dev, int ep, byte[] bytes, int timeout) {
    return LibusbJNI.usb_bulk_write(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep, bytes, timeout);
  }

  public static int usb_bulk_read(SWIGTYPE_p_usb_dev_handle dev, int ep, byte[] bytes, int timeout) {
    return LibusbJNI.usb_bulk_read(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep, bytes, timeout);
  }

  public static int usb_interrupt_write(SWIGTYPE_p_usb_dev_handle dev, int ep, byte[] bytes, int timeout) {
    return LibusbJNI.usb_interrupt_write(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep, bytes, timeout);
  }

  public static int usb_interrupt_read(SWIGTYPE_p_usb_dev_handle dev, int ep, byte[] bytes, int timeout) {
    return LibusbJNI.usb_interrupt_read(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep, bytes, timeout);
  }

  public static int usb_control_msg(SWIGTYPE_p_usb_dev_handle dev, int requesttype, int request, int value, int index, byte[] bytes, int timeout) {
    return LibusbJNI.usb_control_msg(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), requesttype, request, value, index, bytes, timeout);
  }

  public static int usb_set_configuration(SWIGTYPE_p_usb_dev_handle dev, int configuration) {
    return LibusbJNI.usb_set_configuration(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), configuration);
  }

  public static int usb_claim_interface(SWIGTYPE_p_usb_dev_handle dev, int interfaceNum) {
    return LibusbJNI.usb_claim_interface(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), interfaceNum);
  }

  public static int usb_release_interface(SWIGTYPE_p_usb_dev_handle dev, int interfaceNum) {
    return LibusbJNI.usb_release_interface(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), interfaceNum);
  }

  public static int usb_set_altinterface(SWIGTYPE_p_usb_dev_handle dev, int alternate) {
    return LibusbJNI.usb_set_altinterface(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), alternate);
  }

  public static int usb_resetep(SWIGTYPE_p_usb_dev_handle dev, long ep) {
    return LibusbJNI.usb_resetep(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep);
  }

  public static int usb_clear_halt(SWIGTYPE_p_usb_dev_handle dev, long ep) {
    return LibusbJNI.usb_clear_halt(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), ep);
  }

  public static int usb_reset(SWIGTYPE_p_usb_dev_handle dev) {
    return LibusbJNI.usb_reset(SWIGTYPE_p_usb_dev_handle.getCPtr(dev));
  }

  public static String usb_strerror() {
    return LibusbJNI.usb_strerror();
  }

  public static void usb_init() {
    LibusbJNI.usb_init();
  }

  public static void usb_set_debug(int level) {
    LibusbJNI.usb_set_debug(level);
  }

  public static int usb_find_busses() {
    return LibusbJNI.usb_find_busses();
  }

  public static int usb_find_devices() {
    return LibusbJNI.usb_find_devices();
  }

  public static usb_device usb_get_device(SWIGTYPE_p_usb_dev_handle dev) {
    long cPtr = LibusbJNI.usb_get_device(SWIGTYPE_p_usb_dev_handle.getCPtr(dev));
    return (cPtr == 0) ? null : new usb_device(cPtr, false);
  }

  public static usb_bus usb_get_busses() {
    long cPtr = LibusbJNI.usb_get_busses();
    return (cPtr == 0) ? null : new usb_bus(cPtr, false);
  }

  public static usb_version usb_get_version() {
    long cPtr = LibusbJNI.usb_get_version();
    return (cPtr == 0) ? null : new usb_version(cPtr, false);
  }

  public static int usb_isochronous_setup_async(SWIGTYPE_p_usb_dev_handle dev, SWIGTYPE_p_p_void context, short ep, int pktsize) {
    return LibusbJNI.usb_isochronous_setup_async(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), SWIGTYPE_p_p_void.getCPtr(context), ep, pktsize);
  }

  public static int usb_bulk_setup_async(SWIGTYPE_p_usb_dev_handle dev, SWIGTYPE_p_p_void context, short ep) {
    return LibusbJNI.usb_bulk_setup_async(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), SWIGTYPE_p_p_void.getCPtr(context), ep);
  }

  public static int usb_interrupt_setup_async(SWIGTYPE_p_usb_dev_handle dev, SWIGTYPE_p_p_void context, short ep) {
    return LibusbJNI.usb_interrupt_setup_async(SWIGTYPE_p_usb_dev_handle.getCPtr(dev), SWIGTYPE_p_p_void.getCPtr(context), ep);
  }

  public static int usb_submit_async(SWIGTYPE_p_void context, byte[] bytes) {
    return LibusbJNI.usb_submit_async(SWIGTYPE_p_void.getCPtr(context), bytes);
  }

  public static int usb_reap_async(SWIGTYPE_p_void context, int timeout) {
    return LibusbJNI.usb_reap_async(SWIGTYPE_p_void.getCPtr(context), timeout);
  }

  public static int usb_free_async(SWIGTYPE_p_p_void context) {
    return LibusbJNI.usb_free_async(SWIGTYPE_p_p_void.getCPtr(context));
  }

  public static usb_interface usb_interface_index(usb_interface iface, long index) {
    long cPtr = LibusbJNI.usb_interface_index(usb_interface.getCPtr(iface), index);
    return (cPtr == 0) ? null : new usb_interface(cPtr, false);
  }

  public static usb_device usb_device_index(usb_device dev, long index) {
    long cPtr = LibusbJNI.usb_device_index(usb_device.getCPtr(dev), index);
    return (cPtr == 0) ? null : new usb_device(cPtr, false);
  }

  public static usb_endpoint_descriptor usb_endpoint_descriptor_index(usb_endpoint_descriptor ep, long index) {
    long cPtr = LibusbJNI.usb_endpoint_descriptor_index(usb_endpoint_descriptor.getCPtr(ep), index);
    return (cPtr == 0) ? null : new usb_endpoint_descriptor(cPtr, false);
  }

  public static usb_config_descriptor usb_config_descriptor_index(usb_config_descriptor dev, long index) {
    long cPtr = LibusbJNI.usb_config_descriptor_index(usb_config_descriptor.getCPtr(dev), index);
    return (cPtr == 0) ? null : new usb_config_descriptor(cPtr, false);
  }

  public static usb_interface_descriptor usb_interface_descriptor_index(usb_interface_descriptor iface_desc, long index) {
    long cPtr = LibusbJNI.usb_interface_descriptor_index(usb_interface_descriptor.getCPtr(iface_desc), index);
    return (cPtr == 0) ? null : new usb_interface_descriptor(cPtr, false);
  }

}
