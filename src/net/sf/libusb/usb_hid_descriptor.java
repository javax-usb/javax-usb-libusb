/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

public class usb_hid_descriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected usb_hid_descriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(usb_hid_descriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      LibusbJNI.delete_usb_hid_descriptor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setBLength(short bLength) {
    LibusbJNI.set_usb_hid_descriptor_bLength(swigCPtr, bLength);
  }

  public short getBLength() {
    return LibusbJNI.get_usb_hid_descriptor_bLength(swigCPtr);
  }

  public void setBDescriptorType(short bDescriptorType) {
    LibusbJNI.set_usb_hid_descriptor_bDescriptorType(swigCPtr, bDescriptorType);
  }

  public short getBDescriptorType() {
    return LibusbJNI.get_usb_hid_descriptor_bDescriptorType(swigCPtr);
  }

  public void setBcdHID(int bcdHID) {
    LibusbJNI.set_usb_hid_descriptor_bcdHID(swigCPtr, bcdHID);
  }

  public int getBcdHID() {
    return LibusbJNI.get_usb_hid_descriptor_bcdHID(swigCPtr);
  }

  public void setBCountryCode(short bCountryCode) {
    LibusbJNI.set_usb_hid_descriptor_bCountryCode(swigCPtr, bCountryCode);
  }

  public short getBCountryCode() {
    return LibusbJNI.get_usb_hid_descriptor_bCountryCode(swigCPtr);
  }

  public void setBNumDescriptors(short bNumDescriptors) {
    LibusbJNI.set_usb_hid_descriptor_bNumDescriptors(swigCPtr, bNumDescriptors);
  }

  public short getBNumDescriptors() {
    return LibusbJNI.get_usb_hid_descriptor_bNumDescriptors(swigCPtr);
  }

  public usb_hid_descriptor() {
    this(LibusbJNI.new_usb_hid_descriptor(), true);
  }

}
