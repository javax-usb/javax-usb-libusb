/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

public class usb_config_descriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected usb_config_descriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(usb_config_descriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      LibusbJNI.delete_usb_config_descriptor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setBLength(short bLength) {
    LibusbJNI.set_usb_config_descriptor_bLength(swigCPtr, bLength);
  }

  public short getBLength() {
    return LibusbJNI.get_usb_config_descriptor_bLength(swigCPtr);
  }

  public void setBDescriptorType(short bDescriptorType) {
    LibusbJNI.set_usb_config_descriptor_bDescriptorType(swigCPtr, bDescriptorType);
  }

  public short getBDescriptorType() {
    return LibusbJNI.get_usb_config_descriptor_bDescriptorType(swigCPtr);
  }

  public void setWTotalLength(int wTotalLength) {
    LibusbJNI.set_usb_config_descriptor_wTotalLength(swigCPtr, wTotalLength);
  }

  public int getWTotalLength() {
    return LibusbJNI.get_usb_config_descriptor_wTotalLength(swigCPtr);
  }

  public void setBNumInterfaces(short bNumInterfaces) {
    LibusbJNI.set_usb_config_descriptor_bNumInterfaces(swigCPtr, bNumInterfaces);
  }

  public short getBNumInterfaces() {
    return LibusbJNI.get_usb_config_descriptor_bNumInterfaces(swigCPtr);
  }

  public void setBConfigurationValue(short bConfigurationValue) {
    LibusbJNI.set_usb_config_descriptor_bConfigurationValue(swigCPtr, bConfigurationValue);
  }

  public short getBConfigurationValue() {
    return LibusbJNI.get_usb_config_descriptor_bConfigurationValue(swigCPtr);
  }

  public void setIConfiguration(short iConfiguration) {
    LibusbJNI.set_usb_config_descriptor_iConfiguration(swigCPtr, iConfiguration);
  }

  public short getIConfiguration() {
    return LibusbJNI.get_usb_config_descriptor_iConfiguration(swigCPtr);
  }

  public void setBmAttributes(short bmAttributes) {
    LibusbJNI.set_usb_config_descriptor_bmAttributes(swigCPtr, bmAttributes);
  }

  public short getBmAttributes() {
    return LibusbJNI.get_usb_config_descriptor_bmAttributes(swigCPtr);
  }

  public void setMaxPower(short MaxPower) {
    LibusbJNI.set_usb_config_descriptor_MaxPower(swigCPtr, MaxPower);
  }

  public short getMaxPower() {
    return LibusbJNI.get_usb_config_descriptor_MaxPower(swigCPtr);
  }

  public void setInterface(usb_interface usbInterface) {
    LibusbJNI.set_usb_config_descriptor_interface(swigCPtr, usb_interface.getCPtr(usbInterface));
  }

  public usb_interface getInterface() {
    long cPtr = LibusbJNI.get_usb_config_descriptor_interface(swigCPtr);
    return (cPtr == 0) ? null : new usb_interface(cPtr, false);
  }

  public void setExtra(SWIGTYPE_p_unsigned_char extra) {
    LibusbJNI.set_usb_config_descriptor_extra(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(extra));
  }

  public SWIGTYPE_p_unsigned_char getExtra() {
    long cPtr = LibusbJNI.get_usb_config_descriptor_extra(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setExtralen(int extralen) {
    LibusbJNI.set_usb_config_descriptor_extralen(swigCPtr, extralen);
  }

  public int getExtralen() {
    return LibusbJNI.get_usb_config_descriptor_extralen(swigCPtr);
  }

  public usb_config_descriptor() {
    this(LibusbJNI.new_usb_config_descriptor(), true);
  }

}
