/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

class LibusbJNI {
  public final static native int get_LIBUSB_PATH_MAX();
  public final static native int get_USB_CLASS_PER_INTERFACE();
  public final static native int get_USB_CLASS_AUDIO();
  public final static native int get_USB_CLASS_COMM();
  public final static native int get_USB_CLASS_HID();
  public final static native int get_USB_CLASS_PRINTER();
  public final static native int get_USB_CLASS_MASS_STORAGE();
  public final static native int get_USB_CLASS_HUB();
  public final static native int get_USB_CLASS_DATA();
  public final static native int get_USB_CLASS_VENDOR_SPEC();
  public final static native int get_USB_DT_DEVICE();
  public final static native int get_USB_DT_CONFIG();
  public final static native int get_USB_DT_STRING();
  public final static native int get_USB_DT_INTERFACE();
  public final static native int get_USB_DT_ENDPOINT();
  public final static native int get_USB_DT_HID();
  public final static native int get_USB_DT_REPORT();
  public final static native int get_USB_DT_PHYSICAL();
  public final static native int get_USB_DT_HUB();
  public final static native int get_USB_DT_DEVICE_SIZE();
  public final static native int get_USB_DT_CONFIG_SIZE();
  public final static native int get_USB_DT_INTERFACE_SIZE();
  public final static native int get_USB_DT_ENDPOINT_SIZE();
  public final static native int get_USB_DT_ENDPOINT_AUDIO_SIZE();
  public final static native int get_USB_DT_HUB_NONVAR_SIZE();
  public final static native void set_usb_descriptor_header_bLength(long jarg1, short jarg2);
  public final static native short get_usb_descriptor_header_bLength(long jarg1);
  public final static native void set_usb_descriptor_header_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_descriptor_header_bDescriptorType(long jarg1);
  public final static native long new_usb_descriptor_header();
  public final static native void delete_usb_descriptor_header(long jarg1);
  public final static native void set_usb_string_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_string_descriptor_bLength(long jarg1);
  public final static native void set_usb_string_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_string_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_string_descriptor_wData(long jarg1, long jarg2);
  public final static native long get_usb_string_descriptor_wData(long jarg1);
  public final static native long new_usb_string_descriptor();
  public final static native void delete_usb_string_descriptor(long jarg1);
  public final static native void set_usb_hid_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_hid_descriptor_bLength(long jarg1);
  public final static native void set_usb_hid_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_hid_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_hid_descriptor_bcdHID(long jarg1, int jarg2);
  public final static native int get_usb_hid_descriptor_bcdHID(long jarg1);
  public final static native void set_usb_hid_descriptor_bCountryCode(long jarg1, short jarg2);
  public final static native short get_usb_hid_descriptor_bCountryCode(long jarg1);
  public final static native void set_usb_hid_descriptor_bNumDescriptors(long jarg1, short jarg2);
  public final static native short get_usb_hid_descriptor_bNumDescriptors(long jarg1);
  public final static native long new_usb_hid_descriptor();
  public final static native void delete_usb_hid_descriptor(long jarg1);
  public final static native int get_USB_MAXENDPOINTS();
  public final static native void set_usb_endpoint_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bLength(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bEndpointAddress(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bEndpointAddress(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bmAttributes(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bmAttributes(long jarg1);
  public final static native void set_usb_endpoint_descriptor_wMaxPacketSize(long jarg1, int jarg2);
  public final static native int get_usb_endpoint_descriptor_wMaxPacketSize(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bInterval(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bInterval(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bRefresh(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bRefresh(long jarg1);
  public final static native void set_usb_endpoint_descriptor_bSynchAddress(long jarg1, short jarg2);
  public final static native short get_usb_endpoint_descriptor_bSynchAddress(long jarg1);
  public final static native void set_usb_endpoint_descriptor_extra(long jarg1, long jarg2);
  public final static native long get_usb_endpoint_descriptor_extra(long jarg1);
  public final static native void set_usb_endpoint_descriptor_extralen(long jarg1, int jarg2);
  public final static native int get_usb_endpoint_descriptor_extralen(long jarg1);
  public final static native long new_usb_endpoint_descriptor();
  public final static native void delete_usb_endpoint_descriptor(long jarg1);
  public final static native int get_USB_ENDPOINT_ADDRESS_MASK();
  public final static native int get_USB_ENDPOINT_DIR_MASK();
  public final static native int get_USB_ENDPOINT_TYPE_MASK();
  public final static native int get_USB_ENDPOINT_TYPE_CONTROL();
  public final static native int get_USB_ENDPOINT_TYPE_ISOCHRONOUS();
  public final static native int get_USB_ENDPOINT_TYPE_BULK();
  public final static native int get_USB_ENDPOINT_TYPE_INTERRUPT();
  public final static native int get_USB_MAXINTERFACES();
  public final static native void set_usb_interface_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bLength(long jarg1);
  public final static native void set_usb_interface_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_interface_descriptor_bInterfaceNumber(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bInterfaceNumber(long jarg1);
  public final static native void set_usb_interface_descriptor_bAlternateSetting(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bAlternateSetting(long jarg1);
  public final static native void set_usb_interface_descriptor_bNumEndpoints(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bNumEndpoints(long jarg1);
  public final static native void set_usb_interface_descriptor_bInterfaceClass(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bInterfaceClass(long jarg1);
  public final static native void set_usb_interface_descriptor_bInterfaceSubClass(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bInterfaceSubClass(long jarg1);
  public final static native void set_usb_interface_descriptor_bInterfaceProtocol(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_bInterfaceProtocol(long jarg1);
  public final static native void set_usb_interface_descriptor_iInterface(long jarg1, short jarg2);
  public final static native short get_usb_interface_descriptor_iInterface(long jarg1);
  public final static native void set_usb_interface_descriptor_endpoint(long jarg1, long jarg2);
  public final static native long get_usb_interface_descriptor_endpoint(long jarg1);
  public final static native void set_usb_interface_descriptor_extra(long jarg1, long jarg2);
  public final static native long get_usb_interface_descriptor_extra(long jarg1);
  public final static native void set_usb_interface_descriptor_extralen(long jarg1, int jarg2);
  public final static native int get_usb_interface_descriptor_extralen(long jarg1);
  public final static native long new_usb_interface_descriptor();
  public final static native void delete_usb_interface_descriptor(long jarg1);
  public final static native int get_USB_MAXALTSETTING();
  public final static native void set_usb_interface_altsetting(long jarg1, long jarg2);
  public final static native long get_usb_interface_altsetting(long jarg1);
  public final static native void set_usb_interface_num_altsetting(long jarg1, int jarg2);
  public final static native int get_usb_interface_num_altsetting(long jarg1);
  public final static native long new_usb_interface();
  public final static native void delete_usb_interface(long jarg1);
  public final static native int get_USB_MAXCONFIG();
  public final static native void set_usb_config_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_bLength(long jarg1);
  public final static native void set_usb_config_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_config_descriptor_wTotalLength(long jarg1, int jarg2);
  public final static native int get_usb_config_descriptor_wTotalLength(long jarg1);
  public final static native void set_usb_config_descriptor_bNumInterfaces(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_bNumInterfaces(long jarg1);
  public final static native void set_usb_config_descriptor_bConfigurationValue(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_bConfigurationValue(long jarg1);
  public final static native void set_usb_config_descriptor_iConfiguration(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_iConfiguration(long jarg1);
  public final static native void set_usb_config_descriptor_bmAttributes(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_bmAttributes(long jarg1);
  public final static native void set_usb_config_descriptor_MaxPower(long jarg1, short jarg2);
  public final static native short get_usb_config_descriptor_MaxPower(long jarg1);
  public final static native void set_usb_config_descriptor_interface(long jarg1, long jarg2);
  public final static native long get_usb_config_descriptor_interface(long jarg1);
  public final static native void set_usb_config_descriptor_extra(long jarg1, long jarg2);
  public final static native long get_usb_config_descriptor_extra(long jarg1);
  public final static native void set_usb_config_descriptor_extralen(long jarg1, int jarg2);
  public final static native int get_usb_config_descriptor_extralen(long jarg1);
  public final static native long new_usb_config_descriptor();
  public final static native void delete_usb_config_descriptor(long jarg1);
  public final static native void set_usb_device_descriptor_bLength(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bLength(long jarg1);
  public final static native void set_usb_device_descriptor_bDescriptorType(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bDescriptorType(long jarg1);
  public final static native void set_usb_device_descriptor_bcdUSB(long jarg1, int jarg2);
  public final static native int get_usb_device_descriptor_bcdUSB(long jarg1);
  public final static native void set_usb_device_descriptor_bDeviceClass(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bDeviceClass(long jarg1);
  public final static native void set_usb_device_descriptor_bDeviceSubClass(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bDeviceSubClass(long jarg1);
  public final static native void set_usb_device_descriptor_bDeviceProtocol(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bDeviceProtocol(long jarg1);
  public final static native void set_usb_device_descriptor_bMaxPacketSize0(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bMaxPacketSize0(long jarg1);
  public final static native void set_usb_device_descriptor_idVendor(long jarg1, int jarg2);
  public final static native int get_usb_device_descriptor_idVendor(long jarg1);
  public final static native void set_usb_device_descriptor_idProduct(long jarg1, int jarg2);
  public final static native int get_usb_device_descriptor_idProduct(long jarg1);
  public final static native void set_usb_device_descriptor_bcdDevice(long jarg1, int jarg2);
  public final static native int get_usb_device_descriptor_bcdDevice(long jarg1);
  public final static native void set_usb_device_descriptor_iManufacturer(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_iManufacturer(long jarg1);
  public final static native void set_usb_device_descriptor_iProduct(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_iProduct(long jarg1);
  public final static native void set_usb_device_descriptor_iSerialNumber(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_iSerialNumber(long jarg1);
  public final static native void set_usb_device_descriptor_bNumConfigurations(long jarg1, short jarg2);
  public final static native short get_usb_device_descriptor_bNumConfigurations(long jarg1);
  public final static native long new_usb_device_descriptor();
  public final static native void delete_usb_device_descriptor(long jarg1);
  public final static native void set_usb_ctrl_setup_bRequestType(long jarg1, short jarg2);
  public final static native short get_usb_ctrl_setup_bRequestType(long jarg1);
  public final static native void set_usb_ctrl_setup_bRequest(long jarg1, short jarg2);
  public final static native short get_usb_ctrl_setup_bRequest(long jarg1);
  public final static native void set_usb_ctrl_setup_wValue(long jarg1, int jarg2);
  public final static native int get_usb_ctrl_setup_wValue(long jarg1);
  public final static native void set_usb_ctrl_setup_wIndex(long jarg1, int jarg2);
  public final static native int get_usb_ctrl_setup_wIndex(long jarg1);
  public final static native void set_usb_ctrl_setup_wLength(long jarg1, int jarg2);
  public final static native int get_usb_ctrl_setup_wLength(long jarg1);
  public final static native long new_usb_ctrl_setup();
  public final static native void delete_usb_ctrl_setup(long jarg1);
  public final static native int get_USB_REQ_GET_STATUS();
  public final static native int get_USB_REQ_CLEAR_FEATURE();
  public final static native int get_USB_REQ_SET_FEATURE();
  public final static native int get_USB_REQ_SET_ADDRESS();
  public final static native int get_USB_REQ_GET_DESCRIPTOR();
  public final static native int get_USB_REQ_SET_DESCRIPTOR();
  public final static native int get_USB_REQ_GET_CONFIGURATION();
  public final static native int get_USB_REQ_SET_CONFIGURATION();
  public final static native int get_USB_REQ_GET_INTERFACE();
  public final static native int get_USB_REQ_SET_INTERFACE();
  public final static native int get_USB_REQ_SYNCH_FRAME();
  public final static native int get_USB_TYPE_STANDARD();
  public final static native int get_USB_TYPE_CLASS();
  public final static native int get_USB_TYPE_VENDOR();
  public final static native int get_USB_TYPE_RESERVED();
  public final static native int get_USB_RECIP_DEVICE();
  public final static native int get_USB_RECIP_INTERFACE();
  public final static native int get_USB_RECIP_ENDPOINT();
  public final static native int get_USB_RECIP_OTHER();
  public final static native int get_USB_ENDPOINT_IN();
  public final static native int get_USB_ENDPOINT_OUT();
  public final static native int get_USB_ERROR_BEGIN();
  public final static native void set_usb_device_next(long jarg1, long jarg2);
  public final static native long get_usb_device_next(long jarg1);
  public final static native void set_usb_device_prev(long jarg1, long jarg2);
  public final static native long get_usb_device_prev(long jarg1);
  public final static native void set_usb_device_filename(long jarg1, String jarg2);
  public final static native String get_usb_device_filename(long jarg1);
  public final static native void set_usb_device_bus(long jarg1, long jarg2);
  public final static native long get_usb_device_bus(long jarg1);
  public final static native void set_usb_device_descriptor(long jarg1, long jarg2);
  public final static native long get_usb_device_descriptor(long jarg1);
  public final static native void set_usb_device_config(long jarg1, long jarg2);
  public final static native long get_usb_device_config(long jarg1);
  public final static native void set_usb_device_dev(long jarg1, long jarg2);
  public final static native long get_usb_device_dev(long jarg1);
  public final static native long new_usb_device();
  public final static native void delete_usb_device(long jarg1);
  public final static native void set_usb_bus_next(long jarg1, long jarg2);
  public final static native long get_usb_bus_next(long jarg1);
  public final static native void set_usb_bus_prev(long jarg1, long jarg2);
  public final static native long get_usb_bus_prev(long jarg1);
  public final static native void set_usb_bus_dirname(long jarg1, String jarg2);
  public final static native String get_usb_bus_dirname(long jarg1);
  public final static native void set_usb_bus_devices(long jarg1, long jarg2);
  public final static native long get_usb_bus_devices(long jarg1);
  public final static native void set_usb_bus_location(long jarg1, long jarg2);
  public final static native long get_usb_bus_location(long jarg1);
  public final static native long new_usb_bus();
  public final static native void delete_usb_bus(long jarg1);
  public final static native long get_usb_version_driver(long jarg1);
  public final static native long get_usb_version_dll(long jarg1);
  public final static native long new_usb_version();
  public final static native void delete_usb_version(long jarg1);
  public final static native void set_usb_version_driver_major(long jarg1, int jarg2);
  public final static native int get_usb_version_driver_major(long jarg1);
  public final static native void set_usb_version_driver_minor(long jarg1, int jarg2);
  public final static native int get_usb_version_driver_minor(long jarg1);
  public final static native void set_usb_version_driver_micro(long jarg1, int jarg2);
  public final static native int get_usb_version_driver_micro(long jarg1);
  public final static native void set_usb_version_driver_nano(long jarg1, int jarg2);
  public final static native int get_usb_version_driver_nano(long jarg1);
  public final static native long new_usb_version_driver();
  public final static native void delete_usb_version_driver(long jarg1);
  public final static native void set_usb_version_dll_major(long jarg1, int jarg2);
  public final static native int get_usb_version_dll_major(long jarg1);
  public final static native void set_usb_version_dll_minor(long jarg1, int jarg2);
  public final static native int get_usb_version_dll_minor(long jarg1);
  public final static native void set_usb_version_dll_micro(long jarg1, int jarg2);
  public final static native int get_usb_version_dll_micro(long jarg1);
  public final static native void set_usb_version_dll_nano(long jarg1, int jarg2);
  public final static native int get_usb_version_dll_nano(long jarg1);
  public final static native long new_usb_version_dll();
  public final static native void delete_usb_version_dll(long jarg1);
  public final static native long usb_open(long jarg1);
  public final static native int usb_close(long jarg1);
  public final static native int usb_get_string(long jarg1, int jarg2, int jarg3, byte[] jarg4);
  public final static native int usb_get_string_simple(long jarg1, int jarg2, byte[] jarg3);
  public final static native int usb_get_descriptor_by_endpoint(long jarg1, int jarg2, short jarg3, short jarg4, byte[] jarg5);
  public final static native int usb_get_descriptor(long jarg1, short jarg2, short jarg3, byte[] jarg4);
  public final static native int usb_bulk_write(long jarg1, int jarg2, byte[] jarg3, int jarg5);
  public final static native int usb_bulk_read(long jarg1, int jarg2, byte[] jarg3, int jarg5);
  public final static native int usb_interrupt_write(long jarg1, int jarg2, byte[] jarg3, int jarg5);
  public final static native int usb_interrupt_read(long jarg1, int jarg2, byte[] jarg3, int jarg5);
  public final static native int usb_control_msg(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, byte[] jarg6, int jarg8);
  public final static native int usb_set_configuration(long jarg1, int jarg2);
  public final static native int usb_claim_interface(long jarg1, int jarg2);
  public final static native int usb_release_interface(long jarg1, int jarg2);
  public final static native int usb_set_altinterface(long jarg1, int jarg2);
  public final static native int usb_resetep(long jarg1, long jarg2);
  public final static native int usb_clear_halt(long jarg1, long jarg2);
  public final static native int usb_reset(long jarg1);
  public final static native String usb_strerror();
  public final static native void usb_init();
  public final static native void usb_set_debug(int jarg1);
  public final static native int usb_find_busses();
  public final static native int usb_find_devices();
  public final static native long usb_get_device(long jarg1);
  public final static native long usb_get_busses();
  public final static native long usb_get_version();
  public final static native int usb_isochronous_setup_async(long jarg1, long jarg2, short jarg3, int jarg4);
  public final static native int usb_bulk_setup_async(long jarg1, long jarg2, short jarg3);
  public final static native int usb_interrupt_setup_async(long jarg1, long jarg2, short jarg3);
  public final static native int usb_submit_async(long jarg1, byte[] jarg2);
  public final static native int usb_reap_async(long jarg1, int jarg2);
  public final static native int usb_free_async(long jarg1);
  public final static native long usb_interface_index(long jarg1, long jarg2);
  public final static native long usb_device_index(long jarg1, long jarg2);
  public final static native long usb_endpoint_descriptor_index(long jarg1, long jarg2);
  public final static native long usb_config_descriptor_index(long jarg1, long jarg2);
  public final static native long usb_interface_descriptor_index(long jarg1, long jarg2);
}
