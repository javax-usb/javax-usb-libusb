/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

public class usb_device_descriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected usb_device_descriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(usb_device_descriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      LibusbJNI.delete_usb_device_descriptor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setBLength(short bLength) {
    LibusbJNI.set_usb_device_descriptor_bLength(swigCPtr, bLength);
  }

  public short getBLength() {
    return LibusbJNI.get_usb_device_descriptor_bLength(swigCPtr);
  }

  public void setBDescriptorType(short bDescriptorType) {
    LibusbJNI.set_usb_device_descriptor_bDescriptorType(swigCPtr, bDescriptorType);
  }

  public short getBDescriptorType() {
    return LibusbJNI.get_usb_device_descriptor_bDescriptorType(swigCPtr);
  }

  public void setBcdUSB(int bcdUSB) {
    LibusbJNI.set_usb_device_descriptor_bcdUSB(swigCPtr, bcdUSB);
  }

  public int getBcdUSB() {
    return LibusbJNI.get_usb_device_descriptor_bcdUSB(swigCPtr);
  }

  public void setBDeviceClass(short bDeviceClass) {
    LibusbJNI.set_usb_device_descriptor_bDeviceClass(swigCPtr, bDeviceClass);
  }

  public short getBDeviceClass() {
    return LibusbJNI.get_usb_device_descriptor_bDeviceClass(swigCPtr);
  }

  public void setBDeviceSubClass(short bDeviceSubClass) {
    LibusbJNI.set_usb_device_descriptor_bDeviceSubClass(swigCPtr, bDeviceSubClass);
  }

  public short getBDeviceSubClass() {
    return LibusbJNI.get_usb_device_descriptor_bDeviceSubClass(swigCPtr);
  }

  public void setBDeviceProtocol(short bDeviceProtocol) {
    LibusbJNI.set_usb_device_descriptor_bDeviceProtocol(swigCPtr, bDeviceProtocol);
  }

  public short getBDeviceProtocol() {
    return LibusbJNI.get_usb_device_descriptor_bDeviceProtocol(swigCPtr);
  }

  public void setBMaxPacketSize0(short bMaxPacketSize0) {
    LibusbJNI.set_usb_device_descriptor_bMaxPacketSize0(swigCPtr, bMaxPacketSize0);
  }

  public short getBMaxPacketSize0() {
    return LibusbJNI.get_usb_device_descriptor_bMaxPacketSize0(swigCPtr);
  }

  public void setIdVendor(int idVendor) {
    LibusbJNI.set_usb_device_descriptor_idVendor(swigCPtr, idVendor);
  }

  public int getIdVendor() {
    return LibusbJNI.get_usb_device_descriptor_idVendor(swigCPtr);
  }

  public void setIdProduct(int idProduct) {
    LibusbJNI.set_usb_device_descriptor_idProduct(swigCPtr, idProduct);
  }

  public int getIdProduct() {
    return LibusbJNI.get_usb_device_descriptor_idProduct(swigCPtr);
  }

  public void setBcdDevice(int bcdDevice) {
    LibusbJNI.set_usb_device_descriptor_bcdDevice(swigCPtr, bcdDevice);
  }

  public int getBcdDevice() {
    return LibusbJNI.get_usb_device_descriptor_bcdDevice(swigCPtr);
  }

  public void setIManufacturer(short iManufacturer) {
    LibusbJNI.set_usb_device_descriptor_iManufacturer(swigCPtr, iManufacturer);
  }

  public short getIManufacturer() {
    return LibusbJNI.get_usb_device_descriptor_iManufacturer(swigCPtr);
  }

  public void setIProduct(short iProduct) {
    LibusbJNI.set_usb_device_descriptor_iProduct(swigCPtr, iProduct);
  }

  public short getIProduct() {
    return LibusbJNI.get_usb_device_descriptor_iProduct(swigCPtr);
  }

  public void setISerialNumber(short iSerialNumber) {
    LibusbJNI.set_usb_device_descriptor_iSerialNumber(swigCPtr, iSerialNumber);
  }

  public short getISerialNumber() {
    return LibusbJNI.get_usb_device_descriptor_iSerialNumber(swigCPtr);
  }

  public void setBNumConfigurations(short bNumConfigurations) {
    LibusbJNI.set_usb_device_descriptor_bNumConfigurations(swigCPtr, bNumConfigurations);
  }

  public short getBNumConfigurations() {
    return LibusbJNI.get_usb_device_descriptor_bNumConfigurations(swigCPtr);
  }

  public usb_device_descriptor() {
    this(LibusbJNI.new_usb_device_descriptor(), true);
  }

}
