/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.sf.libusb;

public class usb_device_descriptor {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected usb_device_descriptor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(usb_device_descriptor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      LibusbJNI.delete_usb_device_descriptor(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setBLength(short value) {
    LibusbJNI.usb_device_descriptor_bLength_set(swigCPtr, this, value);
  }

  public short getBLength() {
    return LibusbJNI.usb_device_descriptor_bLength_get(swigCPtr, this);
  }

  public void setBDescriptorType(short value) {
    LibusbJNI.usb_device_descriptor_bDescriptorType_set(swigCPtr, this, value);
  }

  public short getBDescriptorType() {
    return LibusbJNI.usb_device_descriptor_bDescriptorType_get(swigCPtr, this);
  }

  public void setBcdUSB(int value) {
    LibusbJNI.usb_device_descriptor_bcdUSB_set(swigCPtr, this, value);
  }

  public int getBcdUSB() {
    return LibusbJNI.usb_device_descriptor_bcdUSB_get(swigCPtr, this);
  }

  public void setBDeviceClass(short value) {
    LibusbJNI.usb_device_descriptor_bDeviceClass_set(swigCPtr, this, value);
  }

  public short getBDeviceClass() {
    return LibusbJNI.usb_device_descriptor_bDeviceClass_get(swigCPtr, this);
  }

  public void setBDeviceSubClass(short value) {
    LibusbJNI.usb_device_descriptor_bDeviceSubClass_set(swigCPtr, this, value);
  }

  public short getBDeviceSubClass() {
    return LibusbJNI.usb_device_descriptor_bDeviceSubClass_get(swigCPtr, this);
  }

  public void setBDeviceProtocol(short value) {
    LibusbJNI.usb_device_descriptor_bDeviceProtocol_set(swigCPtr, this, value);
  }

  public short getBDeviceProtocol() {
    return LibusbJNI.usb_device_descriptor_bDeviceProtocol_get(swigCPtr, this);
  }

  public void setBMaxPacketSize0(short value) {
    LibusbJNI.usb_device_descriptor_bMaxPacketSize0_set(swigCPtr, this, value);
  }

  public short getBMaxPacketSize0() {
    return LibusbJNI.usb_device_descriptor_bMaxPacketSize0_get(swigCPtr, this);
  }

  public void setIdVendor(int value) {
    LibusbJNI.usb_device_descriptor_idVendor_set(swigCPtr, this, value);
  }

  public int getIdVendor() {
    return LibusbJNI.usb_device_descriptor_idVendor_get(swigCPtr, this);
  }

  public void setIdProduct(int value) {
    LibusbJNI.usb_device_descriptor_idProduct_set(swigCPtr, this, value);
  }

  public int getIdProduct() {
    return LibusbJNI.usb_device_descriptor_idProduct_get(swigCPtr, this);
  }

  public void setBcdDevice(int value) {
    LibusbJNI.usb_device_descriptor_bcdDevice_set(swigCPtr, this, value);
  }

  public int getBcdDevice() {
    return LibusbJNI.usb_device_descriptor_bcdDevice_get(swigCPtr, this);
  }

  public void setIManufacturer(short value) {
    LibusbJNI.usb_device_descriptor_iManufacturer_set(swigCPtr, this, value);
  }

  public short getIManufacturer() {
    return LibusbJNI.usb_device_descriptor_iManufacturer_get(swigCPtr, this);
  }

  public void setIProduct(short value) {
    LibusbJNI.usb_device_descriptor_iProduct_set(swigCPtr, this, value);
  }

  public short getIProduct() {
    return LibusbJNI.usb_device_descriptor_iProduct_get(swigCPtr, this);
  }

  public void setISerialNumber(short value) {
    LibusbJNI.usb_device_descriptor_iSerialNumber_set(swigCPtr, this, value);
  }

  public short getISerialNumber() {
    return LibusbJNI.usb_device_descriptor_iSerialNumber_get(swigCPtr, this);
  }

  public void setBNumConfigurations(short value) {
    LibusbJNI.usb_device_descriptor_bNumConfigurations_set(swigCPtr, this, value);
  }

  public short getBNumConfigurations() {
    return LibusbJNI.usb_device_descriptor_bNumConfigurations_get(swigCPtr, this);
  }

  public usb_device_descriptor() {
    this(LibusbJNI.new_usb_device_descriptor(), true);
  }

}
